'===========Exceptions============'
# исключения - обьекты, которые прерывают работу кода, если не были обработаны

'SyntaxError'
'a =' 
#исключение, которое выходит, когда в коде допущенна синтаксическая ошибка
'--------------------------------------'
'NameError'
'print(adasd)'
#исключение, которое выходит, когда мы обращаемся к несуществующей переменной
'--------------------------------------'
'IndexError'
'''
list_ = [1,2,3,4]
list_.pop(100000)
'''
#исключение, которое выходит при обращении к несуществующему индексу
'---------------------------------------'
'KeyError'
'''
dict_ = {'a':1, 'b':2}
print(dict_['c'])
'''
# исключение, которое выходит при обращении к несуществующему ключу
'-----------------------------------------'
'ValueError'
# когда мы передаем в функцию не коректный для нее тип данных
'''
int('10d')
'''
# когда мы распаковываем итерируемый обьект на несколько переменных и кол-во переменных не совпадает с кол-во значений
'''
a, b, c = [1, 2]
'''

'TypeError'
# когда мы пытаемся использовать методы не свойственные какому-то типу данных
# когда мы пытаемся передать в функцию больше или меньше аргументов, чем принимает функция

'''
for i in 1:
    ...
'''
'''
5 + '5'
'''
'''
{[1,2,3]:'a'}
'-------------------------------------'
'''
'ZiroDivisionError'
#выходит когда делим чтото на 0
'''
45 / 0 | 100 // 0 | 3 % 0
'''
'----------------------------------------'
'AttributeError'
#выходит, когда мы обращаемся к несуществующему аттрибуту или методу обьект(тип данных)

'''
[1,2,3].replace(1, 5)
'''
'---------------------------------------'
'IndentationError'
# выходит, когда мы неправильно используем отступы
'''
    a = 5
'''
'''
for i in range(10):
print(i)
'''
Exception 
#исключение, которое создали, чтобы его вызывать

'===========Вызов исключений============'
# raise ZeroDivisionError('Я вызвал name_error')

'============Try except================'
# конструкция, которая помогает обрабатывать исключения

# while True:
#     try: # кострукцию try используют если разработчик не уверен или знает что в коде есть ошибка и хочет обработать ее в except 
#         num = int(input('Введите число: '))
#     except ValueError: #контрукция except нужна для обработки исключения, в данном случае исключение ValueError
#         print('Введите число, а не символы')
#     else: # срабатывает когда не вышло ошибки, исключения (когда не сработал except)
#         select = input('Вы хотите продоложить?')
#         if select == 'нет':
#             break
   
# try:
#     raise Exception
# except (Exception):
#     print("Вышла одна из этих ошибок: (SyntaxError, NameError)")
# except (Exception):
#     print('Обработал ValueError')

try:
    raise ValueError
except:  # отлавливаются все ошибки
    print("Отловленна любая ошибка")

try:
    raise ValueError
except Exception: # отлавливаются все ошибки
    print(2)
except ValueError:
    print(1)


try:
    print(1)
finally:
    print(2)

